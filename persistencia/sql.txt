# USANDO SQLLITE


CREATE TABLE Usuario (
    idUsuario VARCHAR(50) NOT NULL PRIMARY KEY,
    pass VARCHAR(50) NOT NULL,
    tipoUsuario TEXT NOT NULL CHECK (tipoUsuario IN ('CLIENTE', 'REPARTIDOR', 'ADMIN'))
);

CREATE TABLE Direccion (
    id INT AUTO_INCREMENT PRIMARY KEY,
    calle VARCHAR(100) NOT NULL,
    numero VARCHAR(10) NOT NULL,
    complemento VARCHAR(100),
    codigoPostal VARCHAR(10) NOT NULL,
    municipio VARCHAR(50) NOT NULL,
    usuario_id VARCHAR(50),
    FOREIGN KEY (usuario_id) REFERENCES Usuario(idUsuario)
);

CREATE TABLE Restaurante (
    cif VARCHAR(20) PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    direccion_id INT,
    FOREIGN KEY (direccion_id) REFERENCES Direccion(id)
);

CREATE TABLE Menu (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    restaurante_id VARCHAR(20),
    FOREIGN KEY (restaurante_id) REFERENCES Restaurante(cif)
);

CREATE TABLE ItemMenu (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    precio DECIMAL(10, 2) NOT NULL,
    tipo TEXT NOT NULL CHECK(tipo IN ('COMIDA', 'BEBIDA', 'POSTRE')) NOT NULL,
    menu_id INT,
    FOREIGN KEY (menu_id) REFERENCES Menu(id)
);

CREATE TABLE Pedido (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fecha DATE NOT NULL,
    estado TEXT NOT NULL CHECK(estado IN ('PEDIDO', 'PAGADO', 'RECOGIDO', 'ENTREGADO')) NOT NULL,
    cliente_id VARCHAR(50),
    direccion_recogida_id VARCHAR(20),
    direccion_entrega_id INT,
    repartidor_id VARCHAR(50),
    FOREIGN KEY (cliente_id) REFERENCES Usuario(idUsuario),
    FOREIGN KEY (direccion_recogida_id) REFERENCES Direccion(id),
    FOREIGN KEY (direccion_entrega_id) REFERENCES Direccion(id),
    FOREIGN KEY (repartidor_id) REFERENCES Usuario(idUsuario)
);

CREATE TABLE PedidoItem (
    pedido_id INT,
    item_menu_id INT,
    cantidad INT NOT NULL,
    PRIMARY KEY (pedido_id, item_menu_id),
    FOREIGN KEY (pedido_id) REFERENCES Pedido(id),
    FOREIGN KEY (item_menu_id) REFERENCES ItemMenu(id)
);

CREATE TABLE Transaccion (
    id CHAR(36) PRIMARY KEY,
    pedido_id INT,
    fecha DATE NOT NULL,
    total DECIMAL(10, 2) NOT NULL,
    metodo_pago TEXT NOT NULL CHECK(metodo_pago IN ('TARJETA_CREDITO', 'PAYPAL')) NOT NULL,
    FOREIGN KEY (pedido_id) REFERENCES Pedido(id)
);
